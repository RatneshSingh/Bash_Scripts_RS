
function run_blast(){
  local query=$1
  local database=$2
  local outputfile=$3
  local blast_name=$4
  local evalue=$5

  if [ ! -e $database.nhr ];then
    echo ""
    echo " Making blast database from reference file $database"
    echo ""
    makeblastdb -in $database -dbtype nucl
  fi

  echo "**Running $blast_name on $query against $database"
  echo ""
  if [[ -e /home/ratnesh.singh/Scripts/Perl/parralel_blast.pl ]]
  then
    perl /home/ratnesh.singh/Scripts/Perl/parralel_blast.pl -p $blast_name -query $query -db $database -out $outputfile  -a "word_size 9" -outfmt "6 std qcovhsp qcovs qlen slen" -a "culling_limit 2" -a "max_target_seqs 1" -a "num_threads 45" -a "evalue $evalue"  -a "xdrop_gap  300" -a "xdrop_gap_final 300" -n 20
  else
  echo "**$blast_name -query $query -db $database -out $outputfile  -word_size 5 -outfmt '6 std qcovhsp qcovs qlen slen' -culling_limit 2 -max_target_seqs 1 -num_threads 45 -evalue $evalue  -xdrop_gap  300  -xdrop_gap_final 300"
  $blast_name -query $query -db $database -out $outputfile  -word_size 9 -outfmt '6 std qcovhsp qcovs qlen slen' -culling_limit 2 -max_target_seqs 1 -num_threads 45 -evalue $evalue  -xdrop_gap  300  -xdrop_gap_final 300
fi

  echo ""
  echo "Finished running $blast_name"
  echo ""
}

function usage(){

  cat << EOF
usage: $0 options
Required options:
    -r      : Full path length of Reference Genome to be used for mapping and coordinate estimation
    -c      : catalog.tags.tsv from stacks output folder.
    -l      : Joinmap loc file generated by stacks.
    -g      : Full path length of  GeneModel file to be used for mapping and coordinate estimation.
    -i      : Full path of gff file containing location of genes on chromosome.
    -f      : Full path of linkage group folder. Folder contains files of marker names for ind likage groups.
    -b      : Use existing blast results if available. Run blast only if result file does not exists.
    -e      : Evalue to be used for blast. only top hits will be used.
    -s      : replace argument of -r with argument of -w in gff gene names.
    -w      : replace argument of -r with argument of -w in gff gene names.
    -n      : Use this column for name if geneMod names are seperated by | in blast file.
";
EOF
}



#################################################################
# Option collection

while getopts “bc:l:r:e:g:f:i:s:w:n:” OPTION
do
     case $OPTION in
         c)
              catalogtags=$OPTARG
              ;;
         l)

              locfile=$OPTARG
              ;;
         r)

              reference_genome=$OPTARG
              ;;

          g)
              gene_model=$OPTARG

              ;;

          f)
              linkage_folder=$OPTARG
              ;;
          i)
              gff_file=$OPTARG
              ;;

         e)  evalue=$OPTARG
              ;;
         b)
             use_existing_blast=1
              ;;
         s)
             replace=$OPTARG
             ;;
         w)
            with=$OPTARG
            ;;
         n)
            col_name=$OPTARG
            ;;
         ?)
             usage
             exit
             ;;
     esac
done


#$catalogtags
#$locfile
#$reference_genome
: ${evalue:=0.00000001}

if [[ -z $catalogtags ]] || [[ -z $locfile ]] || [[ -z $reference_genome ]]  || [[ -z $linkage_folder ]]
then
     printf "\n\nERROR: catalog, loc and reference genome files are required to run the script.\n\n"
     usage
     exit 1
fi





#################################################################
####### collect sequences from stacks catalog.tags.tsv and create fasta file.
catalogtagsfile=${catalogtags##*/};
locfilename=${locfile##*/};
reffilename=${reference_genome##*/}
genemodfilename=${gene_model##*/}
#while read c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11; do printf ">$c3\n$c9\n"; done <$catalogtags > ${catalogtagsfile%%.tsv}.fasta

    echo ""
    for jmpfile in $locfile; do
      echo "Working for Joinmapfile:$jmpfile";echo ""
      echo "$locfilename: Get marker sequences from catalog.tags.tsv";echo ""
      cut -f1 $locfilename|sed  '1,/nind/d'|awk '/individual names:/{seen=1} seen {exit}; {print}'|sort|grep -v "^$" >$locfilename.catlog.list
      cut -f3,10 $catalogtags|sort -k1n,1 > $catalogtagsfile.seqs.table
      echo "$locfilename: Create fasta file to be used as query for blast";echo ""
      ##### Takes too long to create fasta. perl hash (below) is much faster for this purpose.
      #while read line; do printf ">${line}   "; grep -P "^$line\s+" $catalogtagsfile.seqs.table|awk '{print $1,"\n",$2}'; done < $locfilename.catlog.list>$locfilename.catlog.fasta

      perl -e '
                open INFILE,"$ARGV[0]";
                while(<INFILE>){
                  $_=~s/^\s+//g;
                  ($header,$sequence)=split /\s+/,$_;
                  $header=~s/^\s+|\s+$//g;
                  $sequence=~s/^\s+|\s+$//g;
                  $seq_hash{$header}=$sequence;
                }
      open LIST,"$ARGV[1]";
      open FASTA,">$ARGV[2]";
      while(<LIST>){

        $_=~s/^\s+|\s+$//g;
        print FASTA ">$_\n$seq_hash{$_}\n";

      }
      close FASTA;
      close LIST;
      close INFILE;
      ' $catalogtagsfile.seqs.table $locfilename.catlog.list $locfilename.catlog.fasta


      echo "$locfilename: Step: Run blastn with $reference_genome to get chromosome coordinates for marker";echo ""
      [ ! -e "$locfilename.catlog.vs.$reffilename.blastn.${evalue/-/_}.table" ] && run_blast   $locfilename.catlog.fasta  $reference_genome  $locfilename.catlog.vs.$reffilename.blastn.${evalue/-/_}.table  blastn $evalue

      echo "$locfilename: Step: Run blastn with $gene_model to get gene model names for marker";echo ""
      [ ! -e "$locfilename.catlog.vs.$genemodfilename.blastn.${evalue/-/_}.table" ] && run_blast   $locfilename.catlog.fasta  $gene_model  $locfilename.catlog.vs.$genemodfilename.blastn.${evalue/-/_}.table  blastn $evalue

      ## sort and merge multiple hits for each query. select best hit only
      echo "$locfilename:  Step: Parse blastn result to get best hits with $reffilename";echo ""
      sort -k1,1 -k12,12nr -k11,11n  $locfilename.catlog.vs.$reffilename.blastn.${evalue/-/_}.table | sort -u -k1,1 --merge|cut -f1,2,9|awk '{print $1"\t"$2"\t"$3}' >$locfilename.catlog.vs.$reffilename.blastn.${evalue/-/_}.besthit_conversion.table

      echo "$locfilename:  Step: Parse blastn result to get best hits with $genemodfilename";echo ""
      sort -k1,1 -k12,12nr -k11,11n  $locfilename.catlog.vs.$genemodfilename.blastn.${evalue/-/_}.table | sort -u -k1,1 --merge|cut -f1,2,9|awk '{print $1"\t"$2"\t"$3}' >$locfilename.catlog.vs.$genemodfilename.blastn.${evalue/-/_}.besthit_conversion.table

      echo "$locfilename:  Step: Adding coordinates to marker names from $reffilename";echo ""
      awk 'NR==1 { next } FNR==NR { a[$1]=$2; next } $1 in a { $1=a[$1] }1' $locfilename.catlog.vs.$reffilename.blastn.${evalue/-/_}.besthit_conversion.table $jmpfile >$locfilename.wrt_${reffilename:0:5}.loc

      echo "$locfilename:  Step: Adding coordinates to marker names from $genemodfilename";echo ""
      awk 'NR==1 { next } FNR==NR { a[$1]=$2; next } $1 in a { $1=a[$1] }1' $locfilename.catlog.vs.$genemodfilename.blastn.${evalue/-/_}.besthit_conversion.table $jmpfile >$locfilename.wrt_${genemodfilename:0:5}.loc

      ##### select name till first "|" sign.
      sed -i 's/|[^ tab]\+//' $locfilename.wrt_${reffilename:0:5}.loc
      sed -i 's/|[^ tab]\+//' $locfilename.wrt_${genemodfilename:0:5}.loc

    done


##### convert linkage group to table containing information about sorghum hit for each marker.
echo " Combining Blast names and coordinates with  Marker names and linkage groups.."
cd $linkage_folder
for file in *.txt;
do
perl -ne '$to=1 if (/^\s*group\s+\d+\s*/);next if !$to;next if /^\s*$/; $group=$1 if m/group\s+(\d+)/;next if /^\s*group/;s/^\s+//g; @line=split /\s+/;print "$line[0]\t$line[1]\tLG$group\n"' <$file>$file.table;
done
cat *.txt.table > All_LinkageGroups.table
perl /home/ratnesh.singh/Scripts/Perl/add_blast_hit_info_to_LG.pl \
-s ../$locfilename.catlog.vs.$reffilename.blastn.${evalue/-/_}.besthit_conversion.table \
-g ../$locfilename.catlog.vs.$genemodfilename.blastn.${evalue/-/_}.besthit_conversion.table \
-l All_LinkageGroups.table \
-b ../$locfilename.catlog.vs.$reffilename.blastn.${evalue/-/_}.table \
-m \
-f $gff_file \
-o ${locfilename}_mappedOn_${reffilename/.fasta/}.${evalue/-/_}.summary.table \
-c $col_name \
-r $replace \
-w $with \
-p



echo "Run Finished"
